{"version":3,"sources":["components/FriendForm.js","components/Friends.js","components/Pagination.js","components/searchName.js","components/FriendList.js","App.js","reportWebVitals.js","index.js"],"names":["FriendForm","listLength","onSubmit","useState","input","setInput","className","placeholder","type","onChange","e","target","value","onKeyPress","charCode","preventDefault","id","name","isSelected","Friends","friends","removeFriends","searchText","setFilteredResults","setFriends","toggleFavorites","a","forEach","friend","markedFavorite","filter","remaining","includes","map","index","onClick","Pagination","currentPage","firstPage","lastPage","nextPage","activePageClick","totalPage","prevPage","length","item","title","SearchName","onSearch","FriendList","setsearchText","filteredResults","pageDatas","setPageDatas","allDatas","setAllDatas","setCurrentPage","setTotalPage","filteredArr","displayDataPerPage","data","fetchData","push","totalpgs","isInt","parseInt","pgs","i","Number","len","display","useEffect","total","text","toLowerCase","newFriends","page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ca474ca.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\n\r\nfunction FriendForm({listLength, onSubmit }) {\r\n\r\n    const [input, setInput] = useState(\"\")\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleKeyPress = e => {\r\n        if (e.charCode === 13) {\r\n            e.preventDefault()\r\n            setInput(\"\");\r\n            onSubmit({\r\n                id: listLength,\r\n                name: input,\r\n                isSelected:false,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"inputContainer\">\r\n                <input className=\"inputText\" placeholder='Add Name' type=\"text\" onChange={handleChange} onKeyPress={handleKeyPress} value={input} name='text' />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FriendForm","import {\r\n  MdOutlineFavoriteBorder,\r\n  MdOutlineFavorite,\r\n  MdDelete,\r\n} from \"react-icons/md\";\r\n\r\nfunction Friends({\r\n  friends,\r\n  removeFriends,\r\n  searchText,\r\n  setFilteredResults,\r\n  setFriends,\r\n}) {\r\n\r\n  const toggleFavorites = async(id) => {\r\n     friends.forEach((friend) => {if(friend.id === id){\r\n        friend.isSelected=!friend.isSelected;\r\n    }});\r\n    const markedFavorite = friends.filter((friend) => friend.isSelected);\r\n    const remaining = friends.filter(\r\n      (friend) => !markedFavorite.includes(friend)\r\n    );\r\n    \r\n        if (searchText !== \"\") {\r\n            setFilteredResults([...markedFavorite, ...remaining]);\r\n          } else {\r\n            setFriends([...markedFavorite, ...remaining]);\r\n          }      \r\n    \r\n  };\r\n\r\n  return friends.map((friend, index) => (\r\n    <div className=\"list-items\" key={index}>\r\n      <span key={friend.id}>{friend.name}</span>\r\n      <div className=\"Ã¤ctions\">\r\n      \r\n        <div className=\"btn-action\" onClick={() => toggleFavorites(friend.id)} key={friend.id}>\r\n          {friend.isSelected ? <MdOutlineFavorite /> : <MdOutlineFavoriteBorder />}\r\n        </div>\r\n      \r\n      <button className=\"btn-action ml-5px\" onClick={() => removeFriends(friend.id)}>\r\n        <MdDelete />\r\n      </button>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Friends;\r\n","import { Fragment} from \"react\";\r\n\r\nconst Pagination = ({ currentPage,firstPage, lastPage, nextPage, activePageClick, totalPage ,prevPage}) => {\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"pagination\">\r\n        {currentPage !== 1 && (\r\n          <button\r\n            type=\"button\"\r\n            className={`page_btn radial-out btn btn-primary`}\r\n            onClick={() => firstPage()}\r\n          >\r\n            {\"<<\"}\r\n          </button>\r\n        )}\r\n        {currentPage !== 1 && (\r\n          <button\r\n            type=\"button\"\r\n            className={`page_btn radial-out btn btn-primary`}\r\n            onClick={() => prevPage()}\r\n          >\r\n            {\"<\"}\r\n          </button>\r\n        )}\r\n        {totalPage.length > 0 &&\r\n          totalPage.map((item, index) => {\r\n            return (\r\n              <button\r\n                type=\"button\"\r\n                key={index}\r\n                title={item}\r\n                className={`${\r\n                  currentPage === item ? \"active\" : \"\"\r\n                } page_btn radial-out btn btn-primary`}\r\n                onClick={() => activePageClick(item)}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n        {currentPage !== totalPage.length && (\r\n          <button\r\n            type=\"button\"\r\n            className={`page_btn radial-out btn btn-primary`}\r\n            onClick={() => nextPage()}\r\n          >\r\n            {\">\"}\r\n          </button>\r\n        )}\r\n        {currentPage !== totalPage.length && (\r\n          <button\r\n            type=\"button\"\r\n            className={`page_btn radial-out btn btn-primary`}\r\n            onClick={() => lastPage()}\r\n          >\r\n            {\">>\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","function SearchName({onSearch}) {\r\n    const handleChange=e=>{\r\n        e.preventDefault();\r\n        onSearch(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"inputContainer\">\r\n            <input className=\"inputText\" placeholder='Search Name' type=\"text\"  onChange={handleChange} name='text'/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchName","import { useState ,useEffect} from \"react\";\r\nimport FriendForm from \"./FriendForm\";\r\nimport Friends from \"./Friends\";\r\nimport Pagination from \"./Pagination\";\r\nimport SearchName from \"./searchName\";\r\n\r\nfunction FriendList() {\r\n  const [friends, setFriends] = useState([\r\n    { id: 0, name: \"Ankit\", isSelected: false },\r\n    { id: 1, name: \"John\", isSelected: false },\r\n    { id: 2, name: \"Abhi\", isSelected: false },\r\n    { id: 3, name: \"Mary\", isSelected: false },\r\n    { id: 4, name: \"Lucy\", isSelected: false },\r\n    { id: 5, name: \"Dexter\", isSelected: false },\r\n  ]);\r\n  const [searchText, setsearchText] = useState(\"\");\r\n  const [filteredResults, setFilteredResults] = useState([]);\r\n  const [pageDatas, setPageDatas] = useState([]);\r\n  const [allDatas, setAllDatas] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPage, setTotalPage] = useState(0);\r\n\r\n  const NO_RECORDS = 4;\r\n  const addFriends = (friend) => {\r\n    if (!friend.name) {\r\n      return;\r\n    }\r\n    const newFriends = [friend, ...friends];\r\n    if (searchText !== \"\") {\r\n      setFilteredResults(newFriends);\r\n    } else {\r\n      setFriends(newFriends);\r\n    }\r\n  };\r\n\r\n  const removeFriends = (id) => {\r\n    const filteredArr = [...friends].filter((friend) => friend.id !== id);\r\n    if (searchText !== \"\") {\r\n      setFilteredResults(filteredArr);\r\n    } else {\r\n      setFriends(filteredArr);\r\n    }\r\n  };\r\n\r\n  const searchFriends = (text) => {\r\n    if (text !== \"\") {\r\n      setsearchText(text);\r\n      const filteredArr = [...friends].filter((item) =>\r\n        item.name.toLowerCase().includes(text.toLowerCase())\r\n      );\r\n      setFilteredResults(filteredArr.length ? filteredArr : []);\r\n    } else {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const displayDataPerPage = (data) => {\r\n    // setFriends(data);\r\n    setPageDatas(data);\r\n  };\r\n\r\n  const fetchData=()=>{\r\n    if (friends.length) {\r\n      let data = [];\r\n      setAllDatas(friends);\r\n      friends.map((item, index) => {\r\n        if (index < NO_RECORDS) {\r\n          data.push(item);\r\n        }\r\n        return true;\r\n      });\r\n      let total = isInt(friends.length, NO_RECORDS);\r\n      let totalpgs =\r\n        total !== true\r\n          ? parseInt(friends.length / NO_RECORDS) + 1\r\n          : friends.length / NO_RECORDS;\r\n      let pgs = [];\r\n      for (let i = 1; i <= Number(totalpgs); i++) {\r\n        pgs.push(i);\r\n      }\r\n      setTotalPage(pgs);\r\n      displayDataPerPage(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (friends.length) {\r\n        let data = [];\r\n        setAllDatas(friends);\r\n        friends.map((item, index) => {\r\n          if (index < NO_RECORDS) {\r\n            data.push(item);\r\n          }\r\n          return true;\r\n        });\r\n        let total = isInt(friends.length, NO_RECORDS);\r\n        let totalpgs =\r\n          total !== true\r\n            ? parseInt(friends.length / NO_RECORDS) + 1\r\n            : friends.length / NO_RECORDS;\r\n        let pgs = [];\r\n        for (let i = 1; i <= Number(totalpgs); i++) {\r\n          pgs.push(i);\r\n        }\r\n        setTotalPage(pgs);\r\n        displayDataPerPage(data);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [friends]);\r\n\r\n  function isInt(len, display) {\r\n    return len % display === 0;\r\n  }\r\n\r\n  const prevPage = () => {\r\n    let page = currentPage - 1;\r\n    setCurrentPage(page);\r\n    let data = [];\r\n    allDatas.map((item, index) => {\r\n      if (index < page * NO_RECORDS && index >= (page - 1) * NO_RECORDS) {\r\n        data.push(item);\r\n      }\r\n      return true;\r\n    });\r\n    displayDataPerPage(data);\r\n  };\r\n\r\n  const nextPage = () => {\r\n    let page = currentPage + 1;\r\n    setCurrentPage(page);\r\n    let data = [];\r\n    allDatas.map((item, index) => {\r\n      if (index < page * NO_RECORDS && index >= (page - 1) * NO_RECORDS) {\r\n        data.push(item);\r\n      }\r\n      return true;\r\n    });\r\n    displayDataPerPage(data);\r\n  };\r\n\r\n  const firstPage = () => {\r\n    let page = 1;\r\n    setCurrentPage(page);\r\n    let data = [];\r\n    allDatas.map((item, index) => {\r\n      if (index < page * NO_RECORDS && index >= (page - 1) * NO_RECORDS) {\r\n        data.push(item);\r\n      }\r\n      return true;\r\n    });\r\n    displayDataPerPage(data);\r\n  };\r\n\r\n  const activePageClick = (page) => {\r\n    setCurrentPage(page);\r\n    let data = [];\r\n    allDatas.map((item, index) => {\r\n      if (index < page * NO_RECORDS && index >= (page - 1) * NO_RECORDS) {\r\n        data.push(item);\r\n      }\r\n      return true;\r\n    });\r\n    displayDataPerPage(data);\r\n  };\r\n\r\n  const lastPage = () => {\r\n    let page = totalPage.length;\r\n    setCurrentPage(page);\r\n    let data = [];\r\n    allDatas.map((item, index) => {\r\n      if (index < page * NO_RECORDS && index >= (page - 1) * NO_RECORDS) {\r\n        data.push(item);\r\n      }\r\n      return true;\r\n    });\r\n    displayDataPerPage(data);\r\n  };\r\n  return (\r\n    <>\r\n      <h3 className={\"cardHeader\"}>Friends List</h3>\r\n      <SearchName onSearch={searchFriends} />\r\n      <FriendForm listLength={friends.length} onSubmit={addFriends} />\r\n      {filteredResults.length > 0 || searchText !== \"\" ? (\r\n        <Friends\r\n          friends={filteredResults}\r\n          removeFriends={removeFriends}\r\n          searchText={searchText}\r\n          setFilteredResults={setFilteredResults}\r\n          setFriends={setFriends}\r\n        />\r\n      ) : (\r\n        <Friends\r\n          friends={pageDatas}\r\n          removeFriends={removeFriends}\r\n          searchText={searchText}\r\n          setFilteredResults={setFilteredResults}\r\n          setFriends={setFriends}\r\n        />\r\n      )}\r\n      {<Pagination currentPage={currentPage} firstPage={firstPage} lastPage={lastPage} nextPage={nextPage} activePageClick={activePageClick} totalPage={totalPage} prevPage={prevPage}/>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FriendList;\r\n","\nimport './App.css';\nimport FriendList from './components/FriendList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FriendList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}